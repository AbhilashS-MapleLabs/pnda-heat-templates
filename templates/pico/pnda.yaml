
parameters:
  SaltmasterFlavor:
    type: string
    description: Flavor for the salmaster nodes
    default: m1.mico
  Manager1Flavor:
    type: string
    description: Flavor for the manager nodes
    default: m1.mico
  EdgeFlavor:
    type: string
    description: Flavor for the edge node
    default: m1.mico
  BastionFlavor:
    type: string
    description: Flavor for the bastion nodes
    default: m1.mico
  KafkaFlavor:
    type: string
    description: Flavor for the kafka nodes
    default: m1.mico
  DatanodeFlavor:
    type: string
    description: Flavor for the data nodes
    default: m1.mico
  DataNodes:
    default: '1'
    description: Number of DATA nodes
    type: string
  DatanodeVolumeSize:
    default: 10
    type: number
  PndaFlavor:
    description: pnda flavor
    type: string
    default: pico

resources:
  pnda_cluster:
    type: OS::Pnda::cluster
    depends_on: [ router_interface, deploy_install, saltmaster_server ]
    properties:
      private_net: { get_resource: private_net }
      private_subnet: { get_resource: private_subnet }
      git_private_key_file: { get_param: git_private_key_file }
      public_net: { get_param: public_net }
      KeyName: { get_resource: Key }
      SaltmasterIP: { get_attr: ['edge_server','first_address']}
      PndaSecGroup: { get_resource: PndaSecGroup }
      private_key: { get_attr: ['Key','private_key'] }
      BastionKeyName: { get_param: KeyName }
      deployment_name: { get_param: 'OS::stack_name' }
      image_id: { get_param: image_id }
      EdgeFlavor: { get_param: EdgeFlavor }
      KafkaFlavor: { get_param: KafkaFlavor }
      BastionFlavor: { get_param: BastionFlavor }
      DatanodeFlavor: { get_param: DatanodeFlavor }
      Manager1Flavor: { get_param: Manager1Flavor }
      DataNodes: { get_param: DataNodes }
      DatanodeVolumeSize : { get_param: DatanodeVolumeSize }

  saltmaster_server:
    type: OS::Nova::Server
    depends_on: [ router, private_subnet ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: SaltmasterFlavor }
      key_name: { get_resource: Key }
      networks:
        - port: { get_resource: saltmaster_port }
      name:
        str_replace:
          template: '%stackname%-saltmaster'
          params:
            '%stackname%': {get_param: 'OS::stack_name'}
      software_config_transport: POLL_TEMP_URL
      user_data_format: SOFTWARE_CONFIG
      config_drive: True
